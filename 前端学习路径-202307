### 一、JS高级内功修炼
#### 1、this指针/闭包/作用域
- this 指针详解
- 闭包的概念及应用场景
- 作用域（全局作用域/函数作用域）
- 默认绑定、显式绑定、隐式绑定
- 存储空间、执行上下文
#### 2、面向对象编程/原型及原型链
- JS 面向对象编程
- 原型及原型链
- 继承（原型继承、构造函数继承、组合继承）
- new 关键字到底做了什么
####　3、promise 规范及应用
promise A+ 规范详解
- 手写promise 函数
- 重点注意 then 的链式调用和值的穿透
- 经典Promise相关面试题解析
#### 4、JS 模块化详解
- CommonJS 模块化规范及发展
- AMD、CMD、systemJS 模块化规范介绍及使用
- 模块打包工具工程化使用简介
- 同步模式/异步模式的差异、使用、原理
- 回调函数的执行原理
#### 5、浏览器事件详解
- 详解浏览器事件捕获，冒泡及浏览器不同规范之间的
区别
- 绑定事件的运用，以及封装一个多浏览器兼容的绑定
- 事件函数
- ajax 及 fetch API 详解
- 常见的浏览器请求/响应头/错误码解析
- 发送请求的示例，以及封装一个多浏览器兼容的请求
函数
#### 6、JavaScript性能优化
- 垃圾回收
- 内存管理
#### 7、函数式编程
- 原理及应用场景
- 常见库
#### 8、设计模式
- 设计模式简介
- 复杂应用设计思路与原则
- js常见设计模式分类与应用
#### 9、ts
- 基础理论及原理
- type 和 interface的异同
- 如何基于一个已有类型, 扩展出一个大部分内容相似, 
- 但是有部分区别的类型?
- 实现一个路由跳转通过ts约束参数的routeHelper
- 实现一个基于ts和事件模式的countdown基础
- Scanner 扫描器
- Parser 解析器
- Binder 绑定器
- Checker 检查器
- Emitter 发射器
### 二、ES
#### 1、ES6 规范详解
- ECMAScript 规范发展简介
- ES6 新增 API 解析 && ESNext 规范中的 API解析
- generator / async await 简介
- 函数进阶（箭头函数、默认参数）
- 模板字符串
- 对象和数组的扩展用法
- Proxy、Reflect、Map、Set、Symbol
- for...of、迭代器模式、生成器函数
- 对象与数组的解构、rest 操作符，解构与解构的原理
- 手写实现一个函数模拟Object.entries
- 写一个Promise.allSeettled, 需要返回所有promise的状态和结果
#### 2、ESNext 规范及编译工具简介
- 使用 node.js express 书写简单 API
- 项目实战：使用 ES6 完成今日头条
- 完成脚手架配置 webpack + babel + hmr
- 使用 ES6 语法完成业务相关逻辑
- 使用 fetch 完成数据的获取
- 使用模版来完成列表页与详情页面
- 使用express 完成后端 API 开发
### 三、VUE
#### 1、vue.js 基础
- vue.js 简介
- vue.js 模版及指令
- vue.js 事件/数据绑定
- vue.js 组件化
- 标签中的新属性
- vue.js 组件
- 生命周期
#### 2、vue.js 高级用法
- mixin 复用
- vue.js 动画特效 & 常见组件库介绍
- 插槽 & 插件 & 过滤器
- Vue响应式原理
- 单元素/组件动画
- 列表动画、状态动画、动画库
#### 3、vue.js 状态管理及 ssr（路由及状态同构）
- 前端状态管理出现的意义及解决的问题
- vuex 介绍及深入使用
- vuex 实现原理及初始化过程
- vue.js 服务端渲染介绍
- CSR 与 SSR
- 同构应用
#### 4、vue.js 前端路由及异步组件
- 前端路由 router 原理及表现
- vue.js router 使用详解
- Vue-Router 的实现原理
- 异步组件
- 手动实现一个基于 hash 的路由
- 手动实现一个基于 History 的路由
- 完整的导航解析流程
- 滚动行为
- 路由懒加载
#### 5、vue-cli详解
- Vue-cli原理及用法完全掌握
- Vue-cli源码解析
- vue-cli 项目初始化工具介绍及使用
#### 6、vue.js 核心模块源码解析
- 组件化的实现原理
- 响应式对象的创建，依赖收集、派发更新的实现过程
- event、v-model、slot、keep-alive、transition、transition-group 等常用功能的原理实现
- 深入理解响应式设计
#### 7、Vue3
- 手把手剖析Vue3核心源码
- 手写Vue3中diff算法属性比对及子元素比对流程
- 从性能角度对比vue2.0与vue3.0
#### 8、vue.js 项目实战
- vue-cli4 介绍
- 服务端渲染 server-side-render
- vue.config.js 配置介绍
- vue.config.js 更改webpack配置
- 项目实战：vue + ts 重写今日头条
- 使用 vue-cli 脚手架创建项目
- 使用 vue 和 vuex 进行数据整体管理
- 对比 ES6 项目实战和 Vue 重构后的区别
### 四、NODE
#### 1、node.js 基础教学
- node.js 环境搭建及原生模块解析
- node.js CommonJS 模块化及相关源码解析
- 手写 CommonJS规范实现原理
#### 2、node.js 原理详解
- node.js事件循环模型
- Buffer / stream / events 详解
- Global 全局变量
#### 3、node.js 框架详解
- express / koa 常见中间件及源码解析
- Node BFF
- node.js sequelize ORM 框架解析
#### 4、node.js 网络 http 详解
- TCP/IP网络协议
- HTTP/socket
- Websocket
- Node.js部署与运维
#### 5、node缓存、 安全与鉴权
- cookie 安全
- http 缓存实战
- JWT鉴权认证原理讲解
- JWT鉴权认证实战
#### 6、node.js 实战
- 使用 axios 做一个 node.js 爬虫
- 完成登陆验证场景
- 解决并发问题
- 解决爬虫项目中的常见问题
- 使用 commander 和 chalk 做一个完整的命令行工具，能够自定义初始化我们的项目
### 五、数据结构与算法
#### 1、算法-数据结构篇
- 实现一个LRU缓存
- 求环状链表
- 树的前序、中序、后序遍历
- 树的层序遍历
- 获取树的层级
- 实现 类数组转数组
- 实现 DOM转JSON
- 实现 JSON转DOM
- 实现 树转数组
- 实现 数组转树
- 实现 对象打平
#### 2、算法-排序与双指针等
- n平方复杂度的排序有哪些？
- 如何实现冒泡排序，如何进行优化？
- 如何实现选择排序和插入排序？
- n*logn复杂读的排序有哪些？
- 如何实现快速排序和归并排序？
- 复杂度为n的排序算法有哪些？具体的思路是什么样的？
- 快速排序和归并排序的区别是什么？
- 返回arr的最长无重复元素子数组的长度
- 无重复最长子串
- 最长上升子序列
- 盛水最多的容器
#### 3、算法-二分与回溯
- 求平方根
- 搜索旋转排序数组
- 在排序数组中查找元素的第一个和最后一个位置
- 组合1：给定两个整数 n 和 k，返回范围 [1, n] 中所有
- 可能的 k 个数的组合
- 组合2：找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合
- 组合3：找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合， candidates 不重复
- 全排列1：数组 nums ，返回其所有可能的全排列
- 全排列1：数组 nums ，返回其所有可能的全排列，不重复
- 8皇后问题
#### 4、算法-排序与双指针等
- 跳跃游戏
- 饼干问题1、2
- 买入股票的最佳时机1、2
- 不同路径1、2
- 最大和的连续子数组-贪心、动规
- 最小路径和
### 六、工程化实战
#### 1、前端工程化详解
- 前端工程化的发展 - 从模块化到工程化
- babel 编译工具链的使用 + babel plugin拓展
- 工程化脚手架
- 脚手架核心原理
#### 2、自动化构建
- 常用自动化构建工具
- Npm Scripts、Grunt、 Gulp、FIS3
- Webpack模块详解
- 前端构建的性能优化
- vite新生态的开发变革
#### 3、自动化测试
- 自动化测试概览：单元测试 + e2e测试
- 单元测试理念
- UT框架对比与实践
- e2e测试现实意义
- 端到端测试实践
#### 4、自动化部署
- 持续集成与持续部署Jenkins
#### 5、模块化开发与webpack
- 后模块化的编译
- 异步组件打包
- HRM原理
- 编译工具 babel 详解，如何写一个 babel 插件
- 静态检查工具 eslint 详解，如何自定义团队配置
- 打包工具 webpack 详解
- webpack 优化
- 如何写一个 webpack loader 
- 如何写一个 webpack 插件
#### 6、bundleless 打包构建方案
- vite 使用与介绍
- vite 1.x - 2.x 框架对比
- vite 源码解析
- vite 实战
- 其他 bundleless 方案以及打包优化方案(esbuilder \ rollup 等)介绍与对比
#### 7、微前端
- 微前端概念、现有方案利弊
- Single-spa 实现原理
- 路由应用入口应用加载
- qiankun 实现原理应用加载js 隔离css 隔离应用通信
- qiankun 实战
#### 8、前端 AST
- AST 简介、常见前端 AST 库解析
- babel 原理与框架浅析
- babel 插件实战：日志实战等
### 七、原生开发
#### 1、现代hybrid开发与原理剖析
- hybrid 是什么
- 现代hybrid开发与原理剖析
- 现有开源解决方案源码解析
- JsBridge原理
- Android的JsBridge源码分析
#### 2、electron入门与原理介绍
- electron入门与原理介绍
- Electron 运行时的基本结构分析
- 主进程与渲染进程之间的差异以及相互通信
- Electron 结合React / Vue.js 之类的前端框架
- electron开发一个《开发工具》（实战）
#### 3、flutter/dart入门与原理介绍
- Flutter 概述以及环境搭建
- Dart 语言快速上手、包管理工具
- Flutter 快速上手、开发体验、路由和导航
- 常用Widget、表单组件、布局方式
- 状态管理与sdk
